version: '3.3'

services:
  db:
    image: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
  redis:
    image: "redis:alpine"
  backend:
    build:
      context: ./backend
      args:
        mode: prod
    command: sh -c "python manage.py collectstatic --noinput; gunicorn global.wsgi:application --name synapse --bind 0.0.0.0:3002 --workers 5 --reload"
    environment:
      - DJANGO_SETTINGS_MODULE=global.settings.prod
      - ENV=prod
    volumes:
      - ./backend:/code
      - stats:/code/stats
      - /tmp/cnap:/transient
    ports:
      - "3002:3002"
    depends_on:
      - db
  celery:
    build:
      context: ./backend
      args:
        mode: prod
    command: celery -A global.celery_config:app worker -l info
    environment:
      - DJANGO_SETTINGS_MODULE=global.settings.prod
      - ENV=prod
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
  celery-beat:
    build:
      context: ./backend
      args:
        mode: prod
    command: celery -A global.celery_config:app beat -l info
    environment:
      - DJANGO_SETTINGS_MODULE=global.settings.prod
      - ENV=prod
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile-prod
    command: sh -c "npm run build"
    environment:
      - ENV=prod
    volumes:
      - './frontend:/usr/src/app'
      - '/usr/src/app/node_modules'
      - stats:/usr/src/app/stats
      - npm_cache:/home/node/.npm
    ports:
      - "3001:80"
  webserver:
    build:
      context: ./webserver
      args:
        mode: prod
    environment:
      - ENV=prod
    volumes:
      - ./backend/static/:/static
      - ./frontend/dist/:/frontend
    depends_on:
      - backend
  letsencrypt:
    image: linuxserver/letsencrypt
    volumes:
      - tls_certs:/config
      - ./letsencrypt/:/config/nginx/site-confs/
    environment:
      - URL=synapse.ksu.edu
      - VALIDATION=http
      - TZ=America/Chicago
      - EMAIL=kmdice@ksu.edu
      - PGID=1000
      - PUID=1000
    ports:
      - "80:80"
      - "443:443"

volumes:
  stats:
  db_data:
  tls_certs:
  npm_cache:

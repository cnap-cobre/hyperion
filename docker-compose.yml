version: '3.3'

services:
  db:
    image: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
  redis:
    image: "redis:alpine"
  backend:
    build:
      context: ./backend
      args:
        mode: dev
    command: python3 manage.py runserver 0.0.0.0:3001
    environment:
      - DJANGO_SETTINGS_MODULE=global.settings.dev
      - ENV=dev
    volumes:
      - ./backend:/code
      - stats:/code/stats
      - /tmp/cnap:/transient
    ports:
      - "3001:3001"
    depends_on:
      - db
  celery:
    build:
      context: ./backend
      args:
        mode: dev
    command: celery -A global.celery_config:app worker -l info
    environment:
      - DJANGO_SETTINGS_MODULE=global.settings.dev
      - ENV=dev
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
  celery-beat:
    build:
      context: ./backend
      args:
        mode: dev
    command: celery -A global.celery_config:app beat -l info
    environment:
      - DJANGO_SETTINGS_MODULE=global.settings.dev
      - ENV=dev
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - ENV=dev
    volumes:
      - './frontend:/usr/src/app'
      - '/usr/src/app/node_modules'
      - stats:/usr/src/app/stats
      - npm_cache:/home/pizza/.npm
    ports:
      - "3000:3000"
      - "8888:8888"
  webserver:
    build:
      context: ./webserver
      args:
        mode: dev
    environment:
      - ENV=dev
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - backend

volumes:
  stats:
  db_data:
  npm_cache:
